// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$backpack-name: 'backpack';
$backpack-x: 0px;
$backpack-y: 97px;
$backpack-offset-x: 0px;
$backpack-offset-y: -97px;
$backpack-width: 42px;
$backpack-height: 41px;
$backpack-total-width: 257px;
$backpack-total-height: 138px;
$backpack-image: '../image/sprite.png';
$backpack: (0px, 97px, 0px, -97px, 42px, 41px, 257px, 138px, '../image/sprite.png', 'backpack', );
$icon-clock-name: 'icon-clock';
$icon-clock-x: 237px;
$icon-clock-y: 39px;
$icon-clock-offset-x: -237px;
$icon-clock-offset-y: -39px;
$icon-clock-width: 17px;
$icon-clock-height: 17px;
$icon-clock-total-width: 257px;
$icon-clock-total-height: 138px;
$icon-clock-image: '../image/sprite.png';
$icon-clock: (237px, 39px, -237px, -39px, 17px, 17px, 257px, 138px, '../image/sprite.png', 'icon-clock', );
$icon-envelope-name: 'icon-envelope';
$icon-envelope-x: 153px;
$icon-envelope-y: 68px;
$icon-envelope-offset-x: -153px;
$icon-envelope-offset-y: -68px;
$icon-envelope-width: 17px;
$icon-envelope-height: 13px;
$icon-envelope-total-width: 257px;
$icon-envelope-total-height: 138px;
$icon-envelope-image: '../image/sprite.png';
$icon-envelope: (153px, 68px, -153px, -68px, 17px, 13px, 257px, 138px, '../image/sprite.png', 'icon-envelope', );
$icon-login-name: 'icon-login';
$icon-login-x: 90px;
$icon-login-y: 68px;
$icon-login-offset-x: -90px;
$icon-login-offset-y: -68px;
$icon-login-width: 17px;
$icon-login-height: 17px;
$icon-login-total-width: 257px;
$icon-login-total-height: 138px;
$icon-login-image: '../image/sprite.png';
$icon-login: (90px, 68px, -90px, -68px, 17px, 17px, 257px, 138px, '../image/sprite.png', 'icon-login', );
$icon-phone-name: 'icon-phone';
$icon-phone-x: 112px;
$icon-phone-y: 68px;
$icon-phone-offset-x: -112px;
$icon-phone-offset-y: -68px;
$icon-phone-width: 16px;
$icon-phone-height: 17px;
$icon-phone-total-width: 257px;
$icon-phone-total-height: 138px;
$icon-phone-image: '../image/sprite.png';
$icon-phone: (112px, 68px, -112px, -68px, 16px, 17px, 257px, 138px, '../image/sprite.png', 'icon-phone', );
$icon-placeholder-name: 'icon-placeholder';
$icon-placeholder-x: 47px;
$icon-placeholder-y: 97px;
$icon-placeholder-offset-x: -47px;
$icon-placeholder-offset-y: -97px;
$icon-placeholder-width: 13px;
$icon-placeholder-height: 17px;
$icon-placeholder-total-width: 257px;
$icon-placeholder-total-height: 138px;
$icon-placeholder-image: '../image/sprite.png';
$icon-placeholder: (47px, 97px, -47px, -97px, 13px, 17px, 257px, 138px, '../image/sprite.png', 'icon-placeholder', );
$icon-search-name: 'icon-search';
$icon-search-x: 133px;
$icon-search-y: 68px;
$icon-search-offset-x: -133px;
$icon-search-offset-y: -68px;
$icon-search-width: 15px;
$icon-search-height: 15px;
$icon-search-total-width: 257px;
$icon-search-total-height: 138px;
$icon-search-image: '../image/sprite.png';
$icon-search: (133px, 68px, -133px, -68px, 15px, 15px, 257px, 138px, '../image/sprite.png', 'icon-search', );
$mark-grey-pentagon-name: 'mark-greyPentagon';
$mark-grey-pentagon-x: 0px;
$mark-grey-pentagon-y: 0px;
$mark-grey-pentagon-offset-x: 0px;
$mark-grey-pentagon-offset-y: 0px;
$mark-grey-pentagon-width: 257px;
$mark-grey-pentagon-height: 34px;
$mark-grey-pentagon-total-width: 257px;
$mark-grey-pentagon-total-height: 138px;
$mark-grey-pentagon-image: '../image/sprite.png';
$mark-grey-pentagon: (0px, 0px, 0px, 0px, 257px, 34px, 257px, 138px, '../image/sprite.png', 'mark-greyPentagon', );
$mark-hit-name: 'mark-hit';
$mark-hit-x: 0px;
$mark-hit-y: 39px;
$mark-hit-offset-x: 0px;
$mark-hit-offset-y: -39px;
$mark-hit-width: 130px;
$mark-hit-height: 24px;
$mark-hit-total-width: 257px;
$mark-hit-total-height: 138px;
$mark-hit-image: '../image/sprite.png';
$mark-hit: (0px, 39px, 0px, -39px, 130px, 24px, 257px, 138px, '../image/sprite.png', 'mark-hit', );
$mark-hot-name: 'mark-hot';
$mark-hot-x: 135px;
$mark-hot-y: 39px;
$mark-hot-offset-x: -135px;
$mark-hot-offset-y: -39px;
$mark-hot-width: 97px;
$mark-hot-height: 24px;
$mark-hot-total-width: 257px;
$mark-hot-total-height: 138px;
$mark-hot-image: '../image/sprite.png';
$mark-hot: (135px, 39px, -135px, -39px, 97px, 24px, 257px, 138px, '../image/sprite.png', 'mark-hot', );
$mark-top-name: 'mark-top';
$mark-top-x: 0px;
$mark-top-y: 68px;
$mark-top-offset-x: 0px;
$mark-top-offset-y: -68px;
$mark-top-width: 85px;
$mark-top-height: 24px;
$mark-top-total-width: 257px;
$mark-top-total-height: 138px;
$mark-top-image: '../image/sprite.png';
$mark-top: (0px, 68px, 0px, -68px, 85px, 24px, 257px, 138px, '../image/sprite.png', 'mark-top', );
$spritesheet-width: 257px;
$spritesheet-height: 138px;
$spritesheet-image: '../image/sprite.png';
$spritesheet-sprites: ($backpack, $icon-clock, $icon-envelope, $icon-login, $icon-phone, $icon-placeholder, $icon-search, $mark-grey-pentagon, $mark-hit, $mark-hot, $mark-top, );
$spritesheet: (257px, 138px, '../image/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
